{"ast":null,"code":"import { tap } from 'rxjs/operators';\n/**\n * Make customer RxJS operator to easily log colorized output to the console.\n * @see https://netbasal.com/creating-custom-operators-in-rxjs-32f052d69457\n */\nexport function debugTap(tag) {\n  return tap({\n    next(value) {\n      console.debug(`%c[${tag}: Next]`, DEBUG_COLORS[0], value);\n    },\n    error(error) {\n      console.debug(`%[${tag}: Error]`, DEBUG_COLORS[1], error);\n    },\n    complete() {\n      console.debug(`%c[${tag}]: Complete`, DEBUG_COLORS[2]);\n    }\n  });\n}\nexport const DEBUG_COLORS = ['background: #009688; color: #fff; padding: 3px; font-size: 9px;', 'background: #E91E63; color: #fff; padding: 3px; font-size: 9px;', 'background: #00BCD4; color: #fff; padding: 3px; font-size: 9px;'];\nexport function debug(context, term) {\n  const color = context === 'cache' ? DEBUG_COLORS[0] : DEBUG_COLORS[1];\n  return tap(results => {\n    console.log(`%c[${context}(${term}) = ${results.length}]`, color);\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,GAAG,QAAQ,gBAAgB;AACpC;;;;AAIA,OAAM,SAAUC,QAAQ,CAACC,GAAW;EAClC,OAAOF,GAAG,CAAC;IACTG,IAAI,CAACC,KAAK;MACRC,OAAO,CAACC,KAAK,CAAC,MAAMJ,GAAG,SAAS,EAAEK,YAAY,CAAC,CAAC,CAAC,EAAEH,KAAK,CAAC;IAC3D,CAAC;IACDI,KAAK,CAACA,KAAK;MACTH,OAAO,CAACC,KAAK,CAAC,KAAKJ,GAAG,UAAU,EAAEK,YAAY,CAAC,CAAC,CAAC,EAAEC,KAAK,CAAC;IAC3D,CAAC;IACDC,QAAQ;MACNJ,OAAO,CAACC,KAAK,CAAC,MAAMJ,GAAG,aAAa,EAAEK,YAAY,CAAC,CAAC,CAAC,CAAC;IACxD;GACD,CAAC;AACJ;AAEA,OAAO,MAAMA,YAAY,GAAG,CAC1B,iEAAiE,EACjE,iEAAiE,EACjE,iEAAiE,CAClE;AAED,OAAM,SAAUD,KAAK,CAAsBI,OAAe,EAAEC,IAAY;EACtE,MAAMC,KAAK,GAAGF,OAAO,KAAK,OAAO,GAAGH,YAAY,CAAC,CAAC,CAAC,GAAGA,YAAY,CAAC,CAAC,CAAC;EACrE,OAAOP,GAAG,CAAEa,OAAU,IAAI;IACxBR,OAAO,CAACS,GAAG,CAAC,MAAMJ,OAAO,IAAIC,IAAI,OAAOE,OAAO,CAACE,MAAM,GAAG,EAAEH,KAAK,CAAC;EACnE,CAAC,CAAC;AACJ","names":["tap","debugTap","tag","next","value","console","debug","DEBUG_COLORS","error","complete","context","term","color","results","log","length"],"sourceRoot":"","sources":["/project/zustand-angular-movie-search/src/app/data-access/utils/debug.operator.ts"],"sourcesContent":["import { tap } from 'rxjs/operators';\n/**\n * Make customer RxJS operator to easily log colorized output to the console.\n * @see https://netbasal.com/creating-custom-operators-in-rxjs-32f052d69457\n */\nexport function debugTap(tag: string) {\n  return tap({\n    next(value) {\n      console.debug(`%c[${tag}: Next]`, DEBUG_COLORS[0], value);\n    },\n    error(error) {\n      console.debug(`%[${tag}: Error]`, DEBUG_COLORS[1], error);\n    },\n    complete() {\n      console.debug(`%c[${tag}]: Complete`, DEBUG_COLORS[2]);\n    },\n  });\n}\n\nexport const DEBUG_COLORS = [\n  'background: #009688; color: #fff; padding: 3px; font-size: 9px;',\n  'background: #E91E63; color: #fff; padding: 3px; font-size: 9px;',\n  'background: #00BCD4; color: #fff; padding: 3px; font-size: 9px;',\n];\n\nexport function debug<T extends unknown[]>(context: string, term: string) {\n  const color = context === 'cache' ? DEBUG_COLORS[0] : DEBUG_COLORS[1];\n  return tap((results: T) => {\n    console.log(`%c[${context}(${term}) = ${results.length}]`, color);\n  });\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}